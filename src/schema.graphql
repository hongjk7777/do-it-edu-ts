# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Course {
  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  id: ID!
  name: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
}

input CreateCourseInput {
  name: String!
}

input CreateExamInput {
  commonRound: Int
  courseId: Int!
  maxScores: [Float!]!
  round: Int!
  scoreRule: String!
}

input CreateExamStudentInput {
  examId: Int!
  scores: [Float!]!
  seoulDept: String!
  studnetId: Int!
  yonseiDept: String!
}

input CreateStudentInput {
  courseId: Int!
  name: String!
  phoneNum: String!
  school: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Exam {
  average: Float!
  commonRound: Int
  courseId: Int!

  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  examScore: [ExamScore!]!
  id: ID!
  round: Int!
  scoreRule: String!
  standardDeviation: Float!
  topScore: Float!
  totalTester: Int!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
}

type ExamScore {
  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  id: ID!
  maxScore: Int!
  problemNumber: Int!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
}

type ExamStudent {
  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  examId: ID!
  examStudentScore: [ExamStudentScore!]!
  id: ID!
  seoulDept: String!
  studentId: ID!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
  yonseiDept: String!
}

type ExamStudentScore {
  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  id: ID!
  problemNumber: Float!
  problemScore: Float!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
}

type Mutation {
  createCourse(data: CreateCourseInput!): Course!
  createExam(data: CreateExamInput!): Exam!
  createExamStudent(data: CreateExamStudentInput!): ExamStudent!
  createStudent(data: CreateStudentInput!): Student!
  deleteCourse(id: Int!): Boolean!
  deleteExamStudent(id: Int!): Boolean!
  deleteExams(courseId: Int!): Boolean!
  deleteExamsStudentByExamId(examId: Int!): Boolean!
  deleteStudent(id: Int!): Boolean!
  deleteStudentsByCourseId(id: Int!): Boolean!
}

type Query {
  commonExams(commonRound: Int!): [Exam!]!
  course(id: Int!): Course!
  courses: [Course!]!
  exam(courseId: Int!, round: Int!): Exam!
  examStudent(examId: Int!, studentId: Int!): ExamStudent!
  exams(courseId: Int!): [Exam!]!
  getStudentByPhoneNum(phoneNum: String!): Student!
  getStudentExamsByExamId(examId: Int!): [ExamStudent!]!
  getStudentExamsBySeoulDept(seoulDept: String!): [ExamStudent!]!
  getStudentExamsByStudentId(studentId: Int!): [ExamStudent!]!
  getStudentExamsByYonseiDept(yonseiDept: String!): [ExamStudent!]!
  getStudentsByCourseId(courseId: Int!): [Student!]!
  student(id: Int!): Student!
}

type Student {
  courseId: Int!

  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  id: ID!
  name: String!
  phoneNum: String!
  school: String

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
}