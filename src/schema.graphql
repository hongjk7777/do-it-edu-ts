# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Auth {
  """JWT access token"""
  accessToken: JWT!

  """access token expiration time(second)"""
  expiresIn: Int!

  """refresh token expiration time(second)"""
  refreshIn: Int!

  """JWT refresh token"""
  refreshToken: JWT!
  user: User!
  userRole: String!
}

input ChangePasswordInput {
  newPassword: String!
}

type Course {
  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  examCount: Int!
  id: ID!
  name: String!
  studentCount: Int!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
}

input CreateCourseInput {
  id: Int
  name: String!
}

input CreateExamInput {
  courseId: Int!
  isCommonRound: Boolean!
  maxScores: [Float!]! = [0, 0, 0]
  scoreRule: [String!]! = ["", "", ""]
}

input CreateExamScoreRuleInput {
  examId: Int!
  problemNumber: Int!
  scoreRule: [String!]!
}

input CreateExamStudentInput {
  examId: Int!
  scores: [Float!]!
  seoulDept: String!
  studnetId: Int!
  yonseiDept: String!
}

input CreateStudentInput {
  courseId: Int!
  name: String!
  phoneNum: String!
  school: String! = ""
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input DeleteExamScoreRuleInput {
  examId: Int!
  problemNumber: Int!
  subProblemNumber: Int!
}

type Exam {
  average: Float!
  commonRound: Int
  courseId: Int!

  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  examScore: [ExamScore!]!
  id: ID!
  round: Int!
  scoreRule: [ExamScoreRule!]!
  standardDeviation: Float!
  topScore: Float!
  totalTester: Int!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
}

type ExamScore {
  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  id: ID!
  maxScore: Float!
  problemNumber: Int!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
}

type ExamScoreRule {
  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  id: ID!
  problemNumber: Int!
  scoreRule: String!
  subProblemNumber: Int!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
}

type ExamStudent {
  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  examId: ID!
  examStudentScore: [ExamStudentScore!]!
  id: ID!
  seoulDept: String!
  student: Student!
  studentId: ID!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
  yonseiDept: String!
}

type ExamStudentResponseDto {
  average: Float!
  exam: Exam!
  examStudentScoreList: [ExamStudentScore!]!
  highestScore: Float!
  ranking: Int!
  rankingList: [Int!]!
  stdDev: Float!
  studentAmount: Int!
  subAverageList: [Float!]!
  subHighestScoreList: [Float!]!
}

type ExamStudentScore {
  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  examStudentId: Int!
  id: ID!
  problemNumber: Float!
  problemScore: Float!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
}

input InitPasswordInput {
  username: String!
}

"""
A field whose value is a JSON Web Token (JWT): https://jwt.io/introduction.
"""
scalar JWT

input LoginInput {
  password: String!
  username: String!
}

type Mutation {
  changePassowrd(data: ChangePasswordInput!): User!
  createCourse(data: CreateCourseInput!): Course!
  createExam(data: CreateExamInput!): Exam!
  createExamStudent(data: CreateExamStudentInput!): ExamStudent!
  createStudent(data: CreateStudentInput!): Student!
  deleteCourse(id: Int!): Boolean!
  deleteExamScoreRule(data: DeleteExamScoreRuleInput!): [Boolean!]!
  deleteExamStudent(id: Int!): Boolean!
  deleteExams(courseId: Int!): Boolean!
  deleteExamsStudentByExamId(examId: Int!): Boolean!
  deleteStudent(id: Int!): Boolean!
  deleteStudentsByCourseId(id: Int!): Boolean!
  initPassword(data: InitPasswordInput!): User!
  login(data: LoginInput!): Token!
  refreshToken(token: JWT!): Token!
  signup(data: SignupInput!): Auth!
  updateCourse(data: CreateCourseInput!): Course!
  updateStudent(data: UpdateStudentInput!): Student!
  uploadExcel(file: Upload!): Boolean!
  upsertExamScoreRule(data: CreateExamScoreRuleInput!): [ExamScoreRule!]!
}

type Query {
  commonExams: [Exam!]!
  course(id: Int!): Course!
  courses: [Course!]!
  exam(courseId: Int!, round: Int!): Exam!
  examStudent(examId: Int!, studentId: Int!): ExamStudent!
  exams(courseId: Int!): [Exam!]!
  getStudentByPhoneNum(courseId: Int!, phoneNum: String!): Student!
  getStudentByUserId: Student!
  getStudentExamsByExamId(examId: Int!): [ExamStudent!]!
  getStudentExamsBySeoulDept(seoulDept: String!): [ExamStudent!]!
  getStudentExamsByStudentId(studentId: Int!): [ExamStudentResponseDto!]!
  getStudentExamsByYonseiDept(yonseiDept: String!): [ExamStudent!]!
  getStudentsByCourseId(courseId: Int!): [Student!]!
  student(id: Int!): Student!
}

"""User role"""
enum Role {
  ADMIN
  USER
}

input SignupInput {
  password: String!
  username: String!
}

type Student {
  courseId: Int!

  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  id: ID!
  name: String!
  phoneNum: String!
  school: String

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
}

type Token {
  """JWT access token"""
  accessToken: JWT!

  """access token expiration time(second)"""
  expiresIn: Int!

  """refresh token expiration time(second)"""
  refreshIn: Int!

  """JWT refresh token"""
  refreshToken: JWT!
  userRole: String!
}

input UpdateStudentInput {
  courseId: Int!
  id: Int!
  name: String!
  phoneNum: String!
  school: String!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  id: ID!
  role: Role!
  student: [Student!]

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
  username: String!
}